using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Задача_48.Аквариум
{
    internal class Program
    {
        static void Main(string[] args)
        {
            /*Есть аквариум, в котором плавают рыбы. В этом аквариуме может быть максимум определенное кол-во рыб. 
            Рыб можно добавить в аквариум или рыб можно достать из аквариума. (программу делать в цикле для того, чтобы рыбы могли “жить”)
            Все рыбы отображаются списком, у рыб также есть возраст. 
            За 1 итерацию рыбы стареют на определенное кол-во жизней и могут умереть. 
            Рыб также вывести в консоль, чтобы можно было мониторить показатели.*/

            //вывести информацию о рыбах
            //вывести информацию о полноте аквариума и сколько рыб внутри и снаружи
            //достать и добавить рыбу
            //завершить программу

            int maxCapacity = 10;
            bool isExit = false;
            Aquarium aquarium = new Aquarium(maxCapacity);

            while (isExit == false)
            {

            }

        }

        static void ShowInfo()
        {

        }
    }

    enum KindFish
    {
        Carp,
        Ide,
        Mackerel,
        Piranha,
        Sterlet,
        Seabass
    }

    class Aquarium
    {
        private static Random _random = new Random();
        private int _maxCapacity;
        private List<Fish> _fishes;

        public Aquarium(int maxCapacity)
        {
            _fishes = new List<Fish>();
            _maxCapacity = maxCapacity;
            CreateFishes();
        }

        public void ShowInfo()
        {

        }

        public bool IsFullCapacity()
        {
            return _fishes.Count == _maxCapacity;
        }

        private void CreateFishes()
        {
            for (int i = 0; i < _maxCapacity; i++)
            {
                _fishes.Add(new Fish(GetRandomKind()));
            }
        }

        private string GetRandomKind()
        {
            return ((KindFish)_random.Next(0, Enum.GetValues((KindFish)).Length)).ToString();
        }

    }

    class Fish
    {
        private static Random _random;
        private readonly int _agingRate;
        private readonly int _maxAge;

        public int Age { get; private set; }
        public string Kind { get; private set; }

        public Fish(string kind)
        {
            _random = new Random();
            Age = 0;
            Kind = kind;
            _maxAge = _random.Next(8, 20);
            _agingRate = _random.Next(1, 4);
        }

        public bool IsAlive()
        {
            return Age < _maxAge;
        }

        public void ShowFishInfo()
        {
            Console.Write($"{Kind}. Возвраст {Age}. Продолжительность жизни: {_maxAge}. Скорость старения: {_agingRate}.\n");
        }

        public void GrowOld()
        {
            Age += _agingRate;
        }
    }
}
